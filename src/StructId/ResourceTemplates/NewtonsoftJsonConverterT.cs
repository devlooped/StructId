// <auto-generated/>
#nullable enable

using System.Diagnostics.CodeAnalysis;
using System;
using Newtonsoft.Json;
using StructId;

[TStructId]
[JsonConverter(typeof(StructIdConverters.NewtonsoftJsonConverter<TSelf, TValue>))]
file readonly partial record struct TSelf
{
}

file partial record struct TSelf : IStructId<TValue>, INewable<TSelf, TValue>, IParsable<TSelf>
{
    public TValue Value => throw new NotImplementedException();
    public static TSelf New(TValue value) => throw new NotImplementedException();
    public static TSelf Parse(string s, IFormatProvider? provider) => throw new NotImplementedException();
    public static bool TryParse([NotNullWhen(true)] string? s, IFormatProvider? provider, [MaybeNullWhen(false)] out TSelf result) => throw new NotImplementedException();
}

file record struct TValue : IParsable<TValue>
{
    public static TValue Parse(string s, IFormatProvider? provider) => throw new NotImplementedException();
    public static bool TryParse([NotNullWhen(true)] string? s, IFormatProvider? provider, [MaybeNullWhen(false)] out TValue result) => throw new NotImplementedException();
}
