// <auto-generated />
#nullable enable

using System;
using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StructId;

[TValue]
file class TId_ValueConverter : ValueConverter<TId, string>
{
    public TId_ValueConverter() : this(null) { }

    public TId_ValueConverter(ConverterMappingHints? mappingHints = null)
        : base(id => id.ToString(null, null), value => TId.Parse(value, null), mappingHints) { }
}

file partial struct TId : IParsable<TId>, IFormattable
{
    public static TId Parse(string s, IFormatProvider? provider) => throw new NotImplementedException();
    public static bool TryParse([NotNullWhen(true)] string? s, IFormatProvider? provider, [MaybeNullWhen(false)] out TId result) => throw new NotImplementedException();
    public string ToString(string? format, IFormatProvider? formatProvider) => throw new NotImplementedException();
}