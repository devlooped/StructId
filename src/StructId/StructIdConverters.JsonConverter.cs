// <auto-generated/

using System;
using System.Globalization;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace StructId;

public static partial class StructIdConverters
{
    public class SystemTextJsonConverter<TSelf, TId> : JsonConverter<TSelf>
        where TSelf : IStructId<TId>, INewable<TSelf, TId>
        where TId: struct, IParsable<TId>
    {
        public override TSelf Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            => TSelf.New(TId.Parse(reader.GetString() ?? throw new FormatException("Unsupported null value for struct id."), CultureInfo.InvariantCulture));

        public override void Write(Utf8JsonWriter writer, TSelf value, JsonSerializerOptions options)
        {
            switch (value.Value)
            {
                case Guid guid:
                    writer.WriteStringValue(guid);
                    break;
                case TId inner:
                    writer.WriteRawValue(inner.ToString());
                    break;
                default:
                    throw new InvalidOperationException("Unsupported value type.");
            }
        }

        public override TSelf ReadAsPropertyName(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
            => TSelf.New(TId.Parse(reader.GetString() ?? throw new FormatException("Unsupported null value for struct id."), CultureInfo.InvariantCulture));

        public override void WriteAsPropertyName(global::System.Text.Json.Utf8JsonWriter writer, TSelf value, global::System.Text.Json.JsonSerializerOptions options)
            => writer.WritePropertyName(value.Value.ToString());
    }

    public class SystemTextJsonConverter<TSelf> : JsonConverter<TSelf>
        where TSelf : IStructId, IParsable<TSelf>, INewable<TSelf>
    {
        public override TSelf Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            => TSelf.New(reader.GetString() ?? throw new FormatException("Unsupported null value for struct id."));

        public override void Write(Utf8JsonWriter writer, TSelf value, JsonSerializerOptions options)
            => writer.WriteStringValue(value.Value);

        public override TSelf ReadAsPropertyName(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
           => TSelf.New(reader.GetString() ?? throw new FormatException("Unsupported null value for struct id."));

        public override void WriteAsPropertyName(global::System.Text.Json.Utf8JsonWriter writer, TSelf value, global::System.Text.Json.JsonSerializerOptions options)
            => writer.WritePropertyName(value.Value);
    }
}